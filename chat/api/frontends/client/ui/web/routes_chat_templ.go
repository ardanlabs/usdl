// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.857
package web

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "slices"

func PageChat(ui *WebUI) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<!doctype html><html lang=\"en\"><head><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>USDL Chat + Datastar</title><style>\n    @import \"https://unpkg.com/open-props\";\n    @import \"https://unpkg.com/open-props/normalize.min.css\";\n    @import \"https://unpkg.com/open-props/buttons.min.css\";\n\n\n    .chat {\n      display: flex;\n      height: 100vh;\n      width: 100vw;\n\n      gap: var(--size-8);\n      padding: var(--size-4);\n\n      .users {\n        display: flex;\n        flex-direction: column;\n        min-width: 400px;\n        background-color: var(--gray-11);\n        padding: var(--size-4);\n        border-radius: var(--radius-3);\n      }\n\n      .rightPane {\n        display: flex;\n        flex-direction: column;\n        flex-grow: 1;\n        gap: var(--size-4);\n      }\n\n      .messages {\n        flex: 1;\n        width: 100%;\n        display: flex;\n        flex-direction: column;\n        flex-grow: 1;\n        background-color: var(--gray-11);\n        padding: var(--size-4);\n        border-radius: var(--radius-3);\n        gap: var(--size-4);\n\n        .message {\n          display: flex;\n          flex-direction: column;\n          gap: var(--size-2);\n          margin-bottom: var(--size-4);\n\n          img {\n            width: 50px;\n            height: 50px;\n            border-radius: var(--radius-round);\n            box-shadow: var(--shadow-3);\n          }\n\n          .user {\n            display: flex;\n            align-items: center;\n            font-size: var(--font-size-2);\n            gap: var(--size-2);\n            font-weight: bold;\n            color: var(--gray-9);\n          }\n\n          .text {\n            background-color: var(--gray-9);\n            padding: var(--size-4);\n            border-radius: var(--radius-3);\n            color: var(--white);\n          }\n        }\n      }\n\n      .inputs {\n        display: flex;\n        gap: var(--size-4);\n        align-items: center;\n\n        input {\n          flex-grow: 1;\n          padding: var(--size-4);\n          border-radius: var(--radius-3);\n          border: 1px solid var(--gray-7);\n          background-color: var(--gray-11);\n        }\n\n        button {\n          padding: var(--size-4);\n        }\n      }\n    }\n  </style></head><body><div class=\"chat\"><div class=\"users\"><h2>Users</h2>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if len(ui.usernames) == 0 {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "<div class=\"user\">No users found</div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		} else {

			sortedUsers := make([]string, 0, len(ui.usernames))
			for id, name := range ui.usernames {
				line := prettyPrintUser(id, name)
				sortedUsers = append(sortedUsers, line)
			}
			slices.Sort(sortedUsers)
			for _, line := range sortedUsers {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "<div class=\"user\">")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var2 string
				templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(line)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `routes_chat.templ`, Line: 124, Col: 14}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "</div>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "</div><div class=\"rightPane\"><h2>My ID: ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var3 string
		templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(prettyPrintHex(ui.myAccountID))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `routes_chat.templ`, Line: 130, Col: 48}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "</h2><div class=\"messages\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if len(ui.messages) == 0 {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, "<div class=\"alert\"><h1>No messages found</h1></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		} else {
			for _, msg := range ui.messages {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 8, "<div class=\"message\"><div class=\"user\"><img src=\"https://i.pravatar.cc/300\" alt=\"User Avatar\"> ")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var4 string
				templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinStringErrs(prettyPrintUser(msg.ID.Hex(), msg.Name))
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `routes_chat.templ`, Line: 141, Col: 45}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 9, "</div><div class=\"text\">")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var5 string
				templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs(string(msg.Content))
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `routes_chat.templ`, Line: 143, Col: 48}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 10, "</div></div>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 11, "</div><div class=\"inputs\"><input type=\"text\" placeholder=\"Type your message here...\"> <button>Submit</button></div></div></div></body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
